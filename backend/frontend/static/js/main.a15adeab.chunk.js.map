{"version":3,"sources":["api.js","EditSong.js","SongLibrary.js","ViewSong.js","ViewSheet.js","App.js","serviceWorker.js","index.js"],"names":["getSongList","a","fetch","res","json","results","getSong","id","addSong","song","updateSong","EditSong","match","isAddForm","undefined","params","useState","message","setMessage","setSong","redirectToView","setRedirectToView","isLoading","setLoading","isSending","setSending","validated","setValidated","useEffect","api","fetchData","handleChange","event","target","value","handleSubmit","preventDefault","currentTarget","checkValidity","newSong","to","objectId","status","className","ref","Container","Row","Col","Form","noValidate","onSubmit","Group","controlId","Label","Control","required","type","title","onChange","Feedback","author","code","comment","url","as","rows","lyrics","Button","variant","SongLibrary","songs","setSongs","list","ButtonToolbar","size","Table","striped","hover","scope","map","index","key","ViewSong","setIsLoading","error","setError","redirect","Alert","dayjs","extend","isoWeek","locale","songOpening","songKyrie","songGloria","songIntercession","songGifts","songSanctus","songAnamnesis","songAgnus","songCommunion","songFinal","RawHtml","children","dangerouslySetInnerHTML","__html","ViewSheet","date","isoWeekday","format","aelf","setAelf","fetchResult","informations","jour_liturgique_nom","messes","lectures","intro_lue","titre","refrain_psalmique","contenu","Index","App","Navbar","expand","bg","Brand","src","width","height","alt","Toggle","aria-controls","Collapse","Nav","exact","Link","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.a15adeab.chunk.js","sourcesContent":["// const APPID = 'paxebonum'\r\n\r\nexport async function getSongList() {\r\n  let res = await fetch('/song');\r\n  let json = await res.json();\r\n  return json.results;\r\n}\r\n\r\nexport async function getSong(id) {\r\n  let res = await fetch(`/song/${id}`);\r\n  return await res.json();\r\n}\r\n\r\nexport async function addSong(song) {\r\n  // let res = await fetch('/parse/classes/Song', {\r\n  //   method: 'POST',\r\n  //   headers: {\r\n  //     'Content-Type': 'application/json',\r\n  //     'X-Parse-Application-Id': APPID\r\n  //   },\r\n  //   body: JSON.stringify(song)\r\n  // });\r\n  // return await res.json();\r\n  return {}\r\n}\r\n\r\nexport async function updateSong(song) {\r\n  // const { objectId, createdAt, updatedAt, ...filteredSong } = song;\r\n  // await fetch('/parse/classes/Song/' + objectId, {\r\n  //   method: 'PUT',\r\n  //   headers: {\r\n  //     'Content-Type': 'application/json',\r\n  //     'X-Parse-Application-Id': APPID\r\n  //   },\r\n  //   body: JSON.stringify(filteredSong)\r\n  // });\r\n}\r\n\r\nexport async function deleteSong(id) {\r\n  // await fetch('/parse/classes/Song/' + id, {\r\n  //   method: 'DELETE',\r\n  //   headers: {\r\n  //     'X-Parse-Application-Id': APPID\r\n  //   }\r\n  // });\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ReactMarkdown from 'react-markdown'\r\nimport * as api from './api'\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\r\n\r\n/*\r\nvar songs = [\r\n  {\r\n    title: \"Alléluia, Magnificat\",\r\n    author: \"Communauté de l'Emmanuel (B. Laplaize)\",\r\n    code: \"20-02\",\r\n    comment: \"D'après Lc 1, 46-55\",\r\n    url: \"https://www.youtube.com/watch?v=9rOzt7wlaOc\",\r\n    lyrics: \"1. Mon âme exalte le Seigneur !  \\n   __Louange et gloire à son Nom !__  \\n   Car il fit pour nous des merveilles !  \\n   __Louange et gloire à son Nom !__\\n\\n__R. Alléluia ! Magnificat !  \\n   Mon âme loue le Seigneur !  \\n   Alléluia ! Magnificat !  \\n   Béni soit Dieu mon Sauveur !__\\n\\n2. Il a posé les yeux sur moi.  \\n   __Louange ...__  \\n   Mon coeur tressaille d'allégresse !  \\n   __Louange ...__\"\r\n  },\r\n  {\r\n    \"title\":\"Célébrez la bonté du Seigneur\",\r\n    \"author\":\"Communauté de l'Emmanuel (H.-R. Tiacoh)\",\r\n    \"code\":\"17-11\",\r\n    \"url\":\"https://www.youtube.com/watch?v=1ZhfMIUl4yQ\",\r\n    \"lyrics\":\"R. Célébrez la bonté du Seigneur,\\nSoyez sûrs de l´amour du Sauveur !\\nAyez toujours foi en lui,\\nEn tout temps, il vous conduit :\\nJésus-Christ vous a livré sa vie !\\n\\n1. En tous lieux rendez grâce au Seigneur,\\nDans la joie, la peine et la douleur.\\nDieu est là, avec nous pour toujours,\\nRien ne peut nous séparer de lui !\\n\\n2. Peuple Saint, adorez votre Roi,\\nLe Seigneur victorieux du combat.\\nLe Salut est venu par la croix,\\nÀ jamais son amour règnera !\\n\\n3. De son sein jaillit l´eau de la vie,\\nSur la croix, il a tout accompli.\\nPar ses plaies, il nous envoie l´Esprit,\\nFlots d´amour qui nous donnent la vie !\\n\\n4. Accueillez son Amour en vos vies,\\nDevant la croix contemplez Marie.\\nMéditez la Parole, espérez,\\nDieu demeure avec nous, jubilez !\"\r\n  },\r\n  {\r\n    \"title\":\"Je veux chanter ton amour, Seigneur\",\r\n    \"author\":\"M. Dannaud\",\r\n    \"code\":\"11-26\",\r\n    \"url\":\"https://www.youtube.com/watch?v=9-GZ26qT7iA\",\r\n    \"lyrics\":\"R. Je veux chanter ton amour, Seigneur,\\nChaque instant de ma vie.\\nDanser pour toi en chantant ma joie\\nEt glorifier ton Nom.\\n\\n1. Ton amour pour nous\\nEst plus fort que tout\\nEt tu veux nous donner la vie,\\nNous embraser par ton Esprit.\\nGloire à toi !\\n\\n2. Oui, tu es mon Dieu,\\nTu es mon Seigneur.\\nToi seul es mon libérateur,\\nLe rocher sur qui je m´appuie.\\nGloire à toi !\\n\\n3. Car tu es fidèle,\\nTu es toujours là,\\nTout près de tous ceux qui te cherchent,\\nTu réponds à ceux qui t´appellent.\\nGloire à toi !\\n\\n4. Voici que tu viens\\nAu milieu de nous,\\nDemeurer au cœur de nos vies\\nPour nous mener droit vers le Père.\\nGloire à toi !\\n\\n5. Avec toi, Seigneur\\nJe n´ai peur de rien.\\nTu es là sur tous mes chemins.\\nTu m´apprends à vivre l´amour.\\nGloire à toi !\"\r\n  },\r\n  {\r\n    \"title\":\"Je vous aime, ô mon Dieu\",\r\n    \"author\":\"A. Dumont\",\r\n    \"code\":\"20-09\",\r\n    \"url\":\"https://www.youtube.com/watch?v=jhhz3T4Pnno\",\r\n    \"lyrics\":\"R. Je vous aime, ô mon Dieu  \\nEt mon seul désir est de vous aimer,  \\nDe vous aimer jusqu'au dernier soupir de ma vie,  \\nJusqu'au dernier soupir de ma vie.  \\n\\n1. Ô Dieu Saint, Tu as fait de mon cœur  \\nLe Ciel de ta demeure, un temple sacré !  \\nPère, Fils et Saint-Esprit,  \\nTon amour est pour moi le plus grand des trésors !  \\n\\n2. Nous portons le nom de « fils de Dieu »  \\nCar nous avons un Père qui veille sur nous  \\nMontrons-nous dignes de Lui,  \\nIl a livré son Fils, offrons-Lui notre amour !  \\n\\n3. Jésus Christ, notre Dieu et Seigneur,  \\nTu nous conduis au Père, Tu es le Chemin !  \\nTon sang versé sur la Croix  \\nNous a rendu la vie, nous a ouvert le Ciel !  \\n\\n4. Esprit Saint, Eau Vive de l'amour  \\nRépandue sur la terre en fine rosée,  \\nTu viens arroser le grain  \\nPour que lève l'épi sous le Soleil de Dieu.  \\n\\n5. Ô mon Dieu, ton amour est si bon,  \\nLui qui remplit notre âme, notre seule joie !  \\nQuel bonheur que de t'aimer,  \\nNous sommes si petits, et Tu nous vois si grands !  \\n\\n6. Ton amour est de tous les instants,  \\nDans ta Miséricorde, tout nous est donné,  \\nTu veilles sur nous sans fin,  \\nLorsque nous chancelons, Tu es notre soutien.\",\r\n    \"comment\":\"D'après le Saint Curé d'Ars\"\r\n  }\r\n]\r\n*/\r\n\r\nfunction EditSong({match}) {\r\n\r\n  const isAddForm = match.params.id === undefined;\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [song, setSong] = useState({});\r\n  const [redirectToView, setRedirectToView] = useState(false);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [isSending, setSending] = useState(false);\r\n  const [validated, setValidated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isAddForm) return ;\r\n    \r\n    async function fetchData() {\r\n      setLoading(true);\r\n\r\n      let song = await api.getSong(match.params.id);\r\n      setSong(song);\r\n\r\n      setLoading(false);\r\n    }\r\n    fetchData()\r\n  }, [isAddForm, match.params.id]);\r\n\r\n  const handleChange = (event) => {\r\n    setSong( { ...song, [event.target.id]: event.target.value } );\r\n  }\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setValidated(true);\r\n\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) return\r\n\r\n    try {\r\n      setSending(true);\r\n\r\n      if (isAddForm) {\r\n        let newSong = await api.addSong(song);\r\n        setSong( { ...song, ...newSong } )\r\n      } else {\r\n        await api.updateSong(song);\r\n      }\r\n\r\n      setSending(false);\r\n      \r\n      setRedirectToView(true)\r\n\r\n    } catch {\r\n      setMessage('Désolé, il y a eu une erreur. Veuillez réessayer plus tard.');\r\n    }\r\n  }\r\n\r\n\r\n  if (redirectToView) {\r\n    return <Redirect to={\"/library/view/\" + song.objectId} />\r\n  }\r\n  \r\n  if (message) {\r\n    var status = <div id=\"status\" className={'alert alert-danger'} ref=\"status\">{message}</div>;\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <div className=\"pt-3 pb-2 mb-3\">\r\n        <h2>{isAddForm ? \"Ajouter un nouveau chant\" : \"Modifier le chant\"}</h2>\r\n        <p>Renseignez ici toutes les informations disponibles du chant à ajouter au repertoire.</p>\r\n      </div>\r\n\r\n      {status}\r\n      \r\n      <Row>\r\n        <Col>\r\n          <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"title\">\r\n              <Form.Label>Titre</Form.Label>\r\n              <Form.Control required type=\"text\" value={song.title} onChange={handleChange}/>\r\n              <Form.Control.Feedback type=\"invalid\">Veuillez entrer un titre.</Form.Control.Feedback>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"author\">\r\n              <Form.Label>Auteur</Form.Label>\r\n              <Form.Control type=\"text\" value={song.author} onChange={handleChange}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"code\">\r\n              <Form.Label>Cote</Form.Label>\r\n              <Form.Control type=\"text\" value={song.code} onChange={handleChange}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"comment\">\r\n              <Form.Label>Commentaire</Form.Label>\r\n              <Form.Control type=\"text\" value={song.comment} onChange={handleChange}/>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"url\">\r\n              <Form.Label>YouTube</Form.Label>\r\n              <Form.Control type=\"url\" value={song.url} onChange={handleChange}/>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"lyrics\">\r\n              <Form.Label>Paroles</Form.Label>\r\n              <Form.Control as=\"textarea\" rows=\"16\" required value={song.lyrics} onChange={handleChange}/>\r\n              <Form.Control.Feedback type=\"invalid\">Veuillez entrer des paroles.</Form.Control.Feedback>\r\n            </Form.Group>\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              { isSending ? \"...en cours...\" : isAddForm ? \"Ajouter\" : \"Sauver les modifications\"}\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n\r\n        <Col>\r\n          <div className=\"pt-3 pb-2 mb-3\">\r\n            <h1 className=\"h2\">{song.title}</h1>\r\n            <div className=\"small\">{song.author} - {song.code}</div>\r\n          </div>\r\n          <ReactMarkdown className=\"leads\">{song.lyrics}</ReactMarkdown>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default EditSong;\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, Row, ButtonToolbar, Button, Table } from \"react-bootstrap\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport * as api from './api'\r\n\r\nfunction SongLibrary() {\r\n\r\n  const [songs, setSongs] = useState([])\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let list = await api.getSongList();\r\n      setSongs(list);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3\">\r\n        <h1 className=\"h2\">Répertoire</h1>\r\n        <ButtonToolbar className=\"btn-toolbar\">\r\n          <LinkContainer to=\"/library/new\"><Button size=\"sm\" variant=\"outline-secondary\">Ajouter un chant</Button></LinkContainer>\r\n        </ButtonToolbar>\r\n      </Row>\r\n\r\n      <Table striped hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Titre</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          { songs.map( (song, index) =>\r\n            <tr key={song.objectId}>\r\n              <th scope=\"row\">{index + 1}</th>\r\n              <td><Link to={\"/library/view/\" + song.objectId}>{song.title}</Link></td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n    </Container>\r\n  );\r\n}\r\n\r\n\r\nexport default SongLibrary;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Alert } from \"react-bootstrap\";\r\n// import { ButtonToolbar, Button, ButtonGroup, Modal } from \"react-bootstrap\";\r\n// import { LinkContainer } from 'react-router-bootstrap'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport * as api from './api'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction ViewSong({match}) {\r\n\r\n  const [song, setSong] = useState({})\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [error, setError] = useState('')\r\n  // const [showModal, setShowModal] = useState(false);\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  // const handleDelete = async () => {\r\n  //   await api.deleteSong(match.params.id);\r\n  //   setRedirect(true);\r\n  // }\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      let song = await api.getSong(match.params.id);\r\n      if (song.objectId === undefined) {\r\n        setError('Impossible de trouver le chant')\r\n      }\r\n      setIsLoading(false);\r\n      setSong(song);\r\n    }\r\n    fetchData()\r\n  }, [match.params.id]);\r\n\r\n\r\n  if (error) {\r\n    return <Alert variant='danger'>{error}</Alert>\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <Alert variant='light'>Chargement en cours...</Alert>\r\n  }\r\n\r\n  if (redirect) {\r\n    return <Redirect to={\"/library\"} />\r\n  }\r\n\r\n  return (\r\n    <Container className=\"\">\r\n      <Row className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-baseline pt-3 pb-2 mb-3\">\r\n        <Col className=\"d-flex flex-column\">\r\n          <h2>{song.title}</h2>\r\n          <div className=\"small\">{song.author} - {song.code}</div>\r\n        </Col>\r\n        {/* <ButtonToolbar>\r\n          <ButtonGroup>\r\n            <LinkContainer to={\"/library/edit/\" + match.params.id}><Button size=\"sm\" variant=\"outline-secondary\">Modifier</Button></LinkContainer>\r\n            <Button size=\"sm\" variant=\"outline-danger\" onClick={() => setShowModal(true)}>Supprimer</Button>\r\n            <Modal show={showModal} >\r\n              <Modal.Header>\r\n                <Modal.Title>Supprimer le chant ?</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                Etes-vous certain de vouloir supprimer ce chant?\r\n                Toutes les informations seront definitivement perdues.\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\r\n                  Annuler\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={handleDelete}>\r\n                  Supprimer\r\n                </Button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n\r\n          </ButtonGroup>\r\n        </ButtonToolbar> */}\r\n        <div className=\"btn-toolbar align-top\">\r\n        </div>\r\n      </Row>\r\n      <ReactMarkdown className=\"leads\">{song.lyrics}</ReactMarkdown>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ViewSong;","import React, { useState, useEffect } from 'react';\r\nimport { Alert } from \"react-bootstrap\";\r\nimport ReactMarkdown from 'react-markdown';\r\nimport dayjs from 'dayjs'\r\nimport 'dayjs/locale/fr';\r\nimport isoWeek from 'dayjs/plugin/isoWeek'\r\n\r\ndayjs.extend(isoWeek)\r\ndayjs.locale('fr')\r\n\r\n\r\nconst songOpening = {\r\n  title: \"Le monde attend le passage des Saints\",\r\n  lyrics: `\r\n  __Le monde attend le passage des saints,  \r\n  Là où les saints passent, Dieu passe avec eux,  \r\n  Soyez saints comme Dieu (bis)__\r\n  \r\n  1. Je puis malgré ma petitesse, aspirer à la sainteté ;  \r\n     Se contentant de mes efforts, Dieu m’élèvera à lui,  \r\n     Il sera ma sainteté !\r\n  \r\n  2. La sainteté, c’est la force de Dieu dans la faiblesse de l’homme ;  \r\n     La sainteté c’est d’être mû par l’Esprit-Saint,  \r\n     Car c’est Dieu seul qui fait les Saints !`\r\n}\r\n\r\nconst songKyrie = {\r\n  title: \"Messe de la Trinité\",\r\n  lyrics: `\r\n  __Seigneur, prends pitié de nous !__ (ter)  \r\n  __O Christ, prends pitié de nous !__ (ter)  \r\n  __Seigneur, prends pitié de nous !__ (ter)\r\n  `\r\n}\r\n\r\nconst songGloria = {\r\n  title: \"Léon GUILLOU\",\r\n  lyrics: `\r\n  __Gloria, Gloria in excelsis Deo__ (bis)\r\n\r\n  1. Et paix sur la Terre aux hommes qu’il aime.  \r\n     Nous te louons, nous te bénissons, nous t’adorons,  \r\n     Nous te glorifions, nous te rendons grâce pour ton immense gloire,  \r\n     Seigneur Dieu, roi du ciel, Dieu le Père tout puissant.\r\n\r\n  2. Seigneur, Fils unique, Jésus Christ, Seigneur Agneau de Dieu, le Fils du Père ;  \r\n     Toi qui enlèves le péché du monde, prends pitié de nous ;  \r\n     Toi qui enlèves le péché du monde, reçois notre prière ;  \r\n     Toi qui es assis à la droite du Père, prends pitié de nous.\r\n     \r\n  3. Car Toi seul es Saint,  \r\n     Toi seul est Seigneur, \r\n     Toi seul es le Très-Haut, Jésus Christ, avec le Saint-Esprit,  \r\n     dans la gloire de Dieu le Père. Amen !\r\n  `\r\n}\r\n\r\nconst songIntercession = {\r\n  lyrics: `\r\n  __La voix de Tes enfants, Seigneur, résonne sur la Terre,  \r\n  Vers Toi, comme un encens, Seigneur, s’élèvent nos prières.__\r\n  `\r\n}\r\n\r\nconst songGifts = {\r\n  title: \"Humblement, dans le silence de mon cœur\",\r\n  lyrics: `\r\n  __Humblement, dans le silence de mon cœur  \r\n  Je me donne à toi, mon Seigneur__\r\n  \r\n  1. Par ton amour, fais-moi demeurer humble et petit devant toi\r\n  2. Enseigne-moi ta sagesse, Ô Dieu, viens habiter mon silence\r\n  3. Entre tes mains, je remets ma vie, ma volonté, tout mon être\r\n  4. Je porte en moi ce besoin d'amour de me donner, de me livrer sans retour\r\n  5. Vierge Marie, garde mon chemin dans l'abandon, la confiance de l'amour\r\n  `\r\n}\r\n\r\nconst songSanctus = {\r\n  title: \"Messe de la Trinité\",\r\n  lyrics: `\r\n  __Saint, saint, saint le Seigneur, le Dieu de l'univers !__ (bis)  \r\n  Ciel et Terre sont remplis de ta splendeur et de ta gloire !  \r\n  __Hosanna au plus haut des Cieux !__ (bis)  \r\n  Béni soit celui qui vient au nom du Seigneur !  \r\n  __Hosanna au plus haut des Cieux !__ (bis)\r\n    `\r\n}\r\n\r\nconst songAnamnesis = {\r\n  title: \"Messe de la Trinité\",\r\n  lyrics: `\r\n  Gloire à toi qui étais mort ! (bis)  \r\n  Gloire à toi qui es vivant ! (bis)  \r\n  Dieu Sauveur, nous attendons ta venue.  \r\n  Viens Seigneur Jésus ! (bis)\r\n    `\r\n}\r\nconst songAgnus = {\r\n  title: \"Messe de la Trinité\",\r\n  lyrics: `\r\n  Agneau de Dieu, envoyé par le Père, tu nous sauves du péché,  \r\n\t__Prends pitié de nous, Seigneur.__ (bis)  \r\n  Agneau de Dieu, emportant notre mort, tu nous donnes ta vie,  \r\n\t__Prends pitié de nous, Seigneur.__ (bis)  \r\n  Agneau de Dieu, dans l’Amour de l’Esprit, tu apaises notre cœur,  \r\n\t__Donne-nous la paix, Seigneur.__ (bis)\r\n  `\r\n}\r\nconst songCommunion = {\r\n  title: \"Approchons-nous de la table\",\r\n  lyrics: `\r\n  1. Approchons-nous de la table, où le Christ va s’offrir parmi nous.  \r\n     Offrons-lui ce que nous sommes car le Christ va nous transformer en lui.\r\n\r\n  2. Voici l’admirable échange où le Christ prend sur lui nos péchés.  \r\n     Mettons-nous en sa présence, il nous revêt de sa divinité.\r\n\r\n  3. Père nous te rendons grâce pour ton fils Jésus Christ le Seigneur  \r\n     Par ton Esprit de puissance, rends-nous digne de vivre de tes dons.\r\n  `\r\n}\r\nconst songFinal = {\r\n  title: \"Jour de joie, jour de Victoire\",\r\n  lyrics: `\r\n  __Jour de joie, jour de victoire,  \r\n  Il étend sa main d’en haut,  \r\n  Me retire des grandes hauts :  \r\n  Il me saisit et me délivre !  \r\n  L’Eternel est mon appui  \r\n  Devant tous mes ennemis !   \r\n  Dieu se lève avec éclat  \r\n  Et il marche devant moi.__\r\n  `\r\n}\r\n\r\n    \r\nfunction RawHtml({children, ...params}) {\r\n  return <div dangerouslySetInnerHTML={ {__html: children } } {...params} />;\r\n}\r\n\r\nfunction ViewSheet({match}) {\r\n\r\n  const date = match.params.date || dayjs().isoWeekday(7).format(\"YYYY-MM-DD\");\r\n\r\n  const [aelf, setAelf] = useState({});\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n\r\n      let fetchResult = await fetch(`/aelf/messes/${date}/france`);\r\n      let json = await fetchResult.json();\r\n      setAelf(json);\r\n      setIsLoading(false);\r\n    }\r\n    fetchData();\r\n  }, [date]);\r\n\r\n  if (isLoading) {\r\n    return <Alert variant='light'>Chargement en cours...</Alert>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"h4\">{aelf.informations.jour_liturgique_nom} – {dayjs(date).format(\"DD MMMM YYYY\")}</div>\r\n      \r\n      <div className=\"text-uppercase font-weight-bolder\">Liturgie de l'accueil</div>\r\n\r\n      <h5 className=\"pt-3\"><span className=\"border border-dark px-1\">Chant d'entrée</span> <span className=\"small font-italic\">{songOpening.title}</span></h5>\r\n      <ReactMarkdown>{songOpening.lyrics}</ReactMarkdown>\r\n\r\n      <h5 className=\"pt-3\"><span className=\"border border-dark px-1\">Prière pénitentielle</span> <span className=\"small font-italic\">{songKyrie.title}</span></h5>\r\n      <ReactMarkdown>{songKyrie.lyrics}</ReactMarkdown>\r\n\r\n      <h5 className=\"pt-3\"><span className=\"border border-dark px-1\">Gloire à Dieu</span> <span className=\"small font-italic\">{songGloria.title}</span></h5>\r\n      <ReactMarkdown>{songGloria.lyrics}</ReactMarkdown>\r\n\r\n      \r\n      <div className=\"text-uppercase font-weight-bolder\">Liturgie de la Parole</div>\r\n\r\n      <h5 className=\"pt-3 mb-0\">{aelf.messes[0].lectures[0].intro_lue} <span className=\"small font-italic\">({aelf.messes[0].lectures[0].ref})</span></h5>\r\n      <div className=\"ml-4 font-italic\">{aelf.messes[0].lectures[0].titre}</div>\r\n\r\n      <h5 className=\"pt-3\">Psaume <span className=\"small font-italic\">({aelf.messes[0].lectures[1].ref})</span></h5>\r\n      <RawHtml className=\"ml-4\">{aelf.messes[0].lectures[1].refrain_psalmique}</RawHtml>\r\n      <RawHtml className=\"ml-4\">{aelf.messes[0].lectures[1].contenu}</RawHtml>\r\n\r\n      <h5 className=\"pt-3 mb-0\">{aelf.messes[0].lectures[2].intro_lue} <span className=\"small font-italic\">({aelf.messes[0].lectures[2].ref})</span></h5>\r\n      <div className=\"ml-4 font-italic\">{aelf.messes[0].lectures[2].titre}</div>\r\n\r\n      <h5 className=\"pt-3 mb-0\">{aelf.messes[0].lectures[3].intro_lue} <span className=\"small font-italic\">({aelf.messes[0].lectures[3].ref})</span></h5>\r\n      <div className=\"ml-4 font-italic\">{aelf.messes[0].lectures[3].titre}</div>\r\n\r\n      <h5 className=\"pt-3\"><span className=\"border border-dark px-1\">Prière Universelle</span></h5>\r\n      <ReactMarkdown>{songIntercession.lyrics}</ReactMarkdown>\r\n\r\n      <h5 className=\"pt-3\"><span className=\"border border-dark px-1\">Offertoire</span> <span className=\"small font-italic\">{songGifts.title}</span></h5>\r\n      <ReactMarkdown>{songGifts.lyrics}</ReactMarkdown>\r\n\r\n      \r\n      <div className=\"text-uppercase font-weight-bolder\">Liturgie de l'Eucharistie</div>\r\n\r\n      <h5 className=\"pt-3\"><span className=\"border border-dark px-1\">Sanctus</span> <span className=\"small font-italic\">{songSanctus.title}</span></h5>\r\n      <ReactMarkdown>{songSanctus.lyrics}</ReactMarkdown>\r\n\r\n      <h5 className=\"pt-3\"><span className=\"border border-dark px-1\">Anamnèse</span> <span className=\"small font-italic\">{songAnamnesis.title}</span></h5>\r\n      <ReactMarkdown>{songAnamnesis.lyrics}</ReactMarkdown>\r\n\r\n      <h5 className=\"pt-3\"><span className=\"border border-dark px-1\">Agneau de Dieu</span> <span className=\"small font-italic\">{songAgnus.title}</span></h5>\r\n      <ReactMarkdown>{songAgnus.lyrics}</ReactMarkdown>\r\n\r\n      <h5 className=\"pt-3\"><span className=\"border border-dark px-1\">Communion</span> <span className=\"small font-italic\">{songCommunion.title}</span></h5>\r\n      <ReactMarkdown>{songCommunion.lyrics}</ReactMarkdown>\r\n\r\n      \r\n      <div className=\"text-uppercase font-weight-bolder\">Liturgie de l'Envoi</div>\r\n\r\n      <h5 className=\"pt-3\"><span className=\"border border-dark px-1\">Chant d'envoi</span> <span className=\"small font-italic\">{songFinal.title}</span></h5>\r\n      <ReactMarkdown>{songFinal.lyrics}</ReactMarkdown>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewSheet;","import React from 'react';\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nimport EditSong from './EditSong.js';\r\nimport SongLibrary from './SongLibrary.js';\r\nimport ViewSong from './ViewSong.js';\r\nimport ViewSheet from './ViewSheet.js';\r\n\r\nfunction Index() {\r\n  return <h2>Pax Bonum</h2>;\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Navbar expand=\"sm\" bg=\"light\">\r\n        <Navbar.Brand>\r\n          <img src=\"/taut.png\" width=\"30\" height=\"30\" alt=\"\"/>\r\n        </Navbar.Brand>\r\n        \r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <LinkContainer exact to=\"/\"><Nav.Link>          Accueil           </Nav.Link></LinkContainer>\r\n            <LinkContainer exact to=\"/library/\"><Nav.Link>  Répertoire        </Nav.Link></LinkContainer>\r\n            <LinkContainer exact to=\"/sheets/\"><Nav.Link>   Feuilles de chant </Nav.Link></LinkContainer>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n\r\n      <Container className=\"container\">\r\n        <Route path=\"/\"                 exact component={Index} />\r\n\r\n        <Route path=\"/library/\"         exact component={SongLibrary} />\r\n        <Route path=\"/library/view/:id\"       component={ViewSong} />\r\n        <Route path=\"/library/new\"            component={EditSong} />\r\n        <Route path=\"/library/edit/:id\"       component={EditSong} />\r\n\r\n        <Route path=\"/sheets/\"          exact component={ViewSheet} />\r\n        <Route path=\"/sheets/:date\"           component={ViewSheet} />\r\n\r\n      </Container>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}